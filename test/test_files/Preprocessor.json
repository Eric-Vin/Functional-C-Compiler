[
    {
    "Name"   : "Continued_Line_Simple",
    "Input"  : "test/input/preprocessor/continued_line_simple.c",
    "Output" : "test/output/preprocessor/continued_line_simple/continued_line_simple.pp",
    "Golden" : "test/golden/preprocessor/continued_line_simple.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Continued_Line_Complex",
    "Input"  : "test/input/preprocessor/continued_line_complex.c",
    "Output" : "test/output/preprocessor/continued_line_complex/continued_line_complex.pp",
    "Golden" : "test/golden/preprocessor/continued_line_complex.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Continued_Line_Comment",
    "Input"  : "test/input/preprocessor/continued_line_comment.c",
    "Output" : "test/output/preprocessor/continued_line_comment/continued_line_comment.pp",
    "Golden" : "test/golden/preprocessor/continued_line_comment.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Continued_Line_Include",
    "Input"  : "test/input/preprocessor/continued_line_include/continued_line_include.c",
    "Output" : "test/output/preprocessor/continued_line_include/continued_line_include.pp",
    "Golden" : "test/golden/preprocessor/continued_line_include.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Continued_Line_Define",
    "Input"  : "test/input/preprocessor/continued_line_define.c",
    "Output" : "test/output/preprocessor/continued_line_define/continued_line_define.pp",
    "Golden" : "test/golden/preprocessor/continued_line_define.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Continued_Line_Undefine",
    "Input"  : "test/input/preprocessor/continued_line_undefine.c",
    "Output" : "test/output/preprocessor/continued_line_undefine/continued_line_undefine.pp",
    "Golden" : "test/golden/preprocessor/continued_line_undefine.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Continued_Line_Split_Whitespace",
    "Input"  : "test/input/preprocessor/continued_line_split_whitespace.c",
    "Output" : "test/output/preprocessor/continued_line_split_whitespace/continued_line_split_whitespace.pp",
    "Golden" : "test/golden/preprocessor/continued_line_split_whitespace.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Continued_Line_Split_Comment_1",
    "Input"  : "test/input/preprocessor/continued_line_split_comment_1.c",
    "Output" : "test/output/preprocessor/continued_line_split_comment_1/continued_line_split_comment_1.pp",
    "Golden" : "test/golden/preprocessor/continued_line_split_comment_1.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Continued_Line_Split_Comment_2",
    "Input"  : "test/input/preprocessor/continued_line_split_comment_2.c",
    "Output" : "test/output/preprocessor/continued_line_split_comment_2/continued_line_split_comment_2.pp",
    "Golden" : "test/golden/preprocessor/continued_line_split_comment_2.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Continued_Line_Split_Complex",
    "Input"  : "test/input/preprocessor/continued_line_split_complex.c",
    "Output" : "test/output/preprocessor/continued_line_split_complex/continued_line_split_complex.pp",
    "Golden" : "test/golden/preprocessor/continued_line_split_complex.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Comment_Line_Simple",
    "Input"  : "test/input/preprocessor/comment_line_simple.c",
    "Output" : "test/output/preprocessor/comment_line_simple/comment_line_simple.pp",
    "Golden" : "test/golden/preprocessor/comment_line_simple.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Comment_Block_Simple",
    "Input"  : "test/input/preprocessor/comment_block_simple.c",
    "Output" : "test/output/preprocessor/comment_block_simple/comment_block_simple.pp",
    "Golden" : "test/golden/preprocessor/comment_block_simple.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Comment_Block_Multiple_Open",
    "Input"  : "test/input/preprocessor/comment_block_multiple_open.c",
    "Output" : "test/output/preprocessor/comment_block_multiple_open/comment_block_multiple_open.pp",
    "Golden" : "test/golden/preprocessor/comment_block_multiple_open.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Comment_Block_Multiple_Close",
    "Input"  : "test/input/preprocessor/comment_block_multiple_close.c",
    "Output" : "test/output/preprocessor/comment_block_multiple_close/comment_block_multiple_close.pp",
    "Golden" : "test/golden/preprocessor/comment_block_multiple_close.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Comment_Block_Nested",
    "Input"  : "test/input/preprocessor/comment_block_nested.c",
    "Output" : "test/output/preprocessor/comment_block_nested/comment_block_nested.pp",
    "Golden" : "test/golden/preprocessor/comment_block_nested.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Comment_Nested_1",
    "Input"  : "test/input/preprocessor/comment_nested_1.c",
    "Output" : "test/output/preprocessor/comment_nested_1/comment_nested_1.pp",
    "Golden" : "test/golden/preprocessor/comment_nested_1.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Comment_Nested_2",
    "Input"  : "test/input/preprocessor/comment_nested_2.c",
    "Output" : "test/output/preprocessor/comment_nested_2/comment_nested_2.pp",
    "Golden" : "test/golden/preprocessor/comment_nested_2.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Comment_In_String_Literal",
    "Input"  : "test/input/preprocessor/comment_in_string_literal.c",
    "Output" : "test/output/preprocessor/comment_in_string_literal/comment_in_string_literal.pp",
    "Golden" : "test/golden/preprocessor/comment_in_string_literal.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "New_Line_EOF",
    "Input"  : "test/input/preprocessor/new_line_eof.c",
    "Output" : "test/output/preprocessor/new_line_eof/new_line_eof.pp",
    "Golden" : "test/golden/preprocessor/new_line_eof.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Include_File_Double_Quotes",
    "Input"  : "test/input/preprocessor/include_file_double_quotes/include_file_double_quotes.c",
    "Output" : "test/output/preprocessor/include_file_double_quotes/include_file_double_quotes.pp",
    "Golden" : "test/golden/preprocessor/include_file_double_quotes.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Include_Lib",
    "Input"  : "test/input/preprocessor/include_lib.c",
    "Output" : "test/output/preprocessor/include_lib/include_lib.pp",
    "Golden" : "test/golden/preprocessor/include_lib.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Include_Space",
    "Input"  : "test/input/preprocessor/include_space/include_space.c",
    "Output" : "test/output/preprocessor/include_space/include_space.pp",
    "Golden" : "test/golden/preprocessor/include_space.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Include_Split_Space",
    "Input"  : "test/input/preprocessor/include_split_space/include_split_space.c",
    "Output" : "test/output/preprocessor/include_split_space/include_split_space.pp",
    "Golden" : "test/golden/preprocessor/include_split_space.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Include_File_Single_Quotes",
    "Input"  : "test/input/preprocessor/include_file_single_quotes/include_file_single_quotes.c",
    "Output" : "test/output/preprocessor/include_file_single_quotes/include_file_single_quotes.pp",
    "Golden" : "",
    "Type"   : "Preprocessor",
    "Error"  : "True"
    },
    {
    "Name"   : "Include_No_File",
    "Input"  : "test/input/preprocessor/include_no_file.c",
    "Output" : "test/output/preprocessor/include_no_file/include_no_file.pp",
    "Golden" : "",
    "Type"   : "Preprocessor",
    "Error"  : "True"
    },
    {
    "Name"   : "Include_No_Lib",
    "Input"  : "test/input/preprocessor/include_no_lib.c",
    "Output" : "test/output/preprocessor/include_no_lib/include_no_lib.pp",
    "Golden" : "",
    "Type"   : "Preprocessor",
    "Error"  : "True"
    },
    {
    "Name"   : "Include_Invalid_Wrapper",
    "Input"  : "test/input/preprocessor/include_invalid_wrapper/include_invalid_wrapper.c",
    "Output" : "test/output/preprocessor/include_invalid_wrapper/include_invalid_wrapper.pp",
    "Golden" : "",
    "Type"   : "Preprocessor",
    "Error"  : "True"
    },
    {
    "Name"   : "Include_Invalid_Params",
    "Input"  : "test/input/preprocessor/include_invalid_params/include_invalid_params.c",
    "Output" : "test/output/preprocessor/include_invalid_params/include_invalid_params.pp",
    "Golden" : "",
    "Type"   : "Preprocessor",
    "Error"  : "True"
    },
    {
    "Name"   : "Define_Simple_Identifier",
    "Input"  : "test/input/preprocessor/define_simple_identifier.c",
    "Output" : "test/output/preprocessor/define_simple_identifier/define_simple_identifier.pp",
    "Golden" : "test/golden/preprocessor/define_simple_identifier.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Define_Blank",
    "Input"  : "test/input/preprocessor/define_blank.c",
    "Output" : "test/output/preprocessor/define_blank/define_blank.pp",
    "Golden" : "test/golden/preprocessor/define_blank.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Define_Complex_Identifier",
    "Input"  : "test/input/preprocessor/define_complex_identifier.c",
    "Output" : "test/output/preprocessor/define_complex_identifier/define_complex_identifier.pp",
    "Golden" : "test/golden/preprocessor/define_complex_identifier.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Define_Text",
    "Input"  : "test/input/preprocessor/define_text.c",
    "Output" : "test/output/preprocessor/define_text/define_text.pp",
    "Golden" : "test/golden/preprocessor/define_text.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Define_Decimal",
    "Input"  : "test/input/preprocessor/define_decimal.c",
    "Output" : "test/output/preprocessor/define_decimal/define_decimal.pp",
    "Golden" : "test/golden/preprocessor/define_decimal.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Define_String_Single_Quotes",
    "Input"  : "test/input/preprocessor/define_string_single_quotes.c",
    "Output" : "test/output/preprocessor/define_string_single_quotes/define_string_single_quotes.pp",
    "Golden" : "test/golden/preprocessor/define_string_single_quotes.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Define_String_Double_Quotes",
    "Input"  : "test/input/preprocessor/define_string_double_quotes.c",
    "Output" : "test/output/preprocessor/define_string_double_quotes/define_string_double_quotes.pp",
    "Golden" : "test/golden/preprocessor/define_string_double_quotes.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Define_Token_List",
    "Input"  : "test/input/preprocessor/define_token_list.c",
    "Output" : "test/output/preprocessor/define_token_list/define_token_list.pp",
    "Golden" : "test/golden/preprocessor/define_token_list.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Define_Sequential",
    "Input"  : "test/input/preprocessor/define_sequential.c",
    "Output" : "test/output/preprocessor/define_sequential/define_sequential.pp",
    "Golden" : "test/golden/preprocessor/define_sequential.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Define_Nested",
    "Input"  : "test/input/preprocessor/define_nested.c",
    "Output" : "test/output/preprocessor/define_nested/define_nested.pp",
    "Golden" : "test/golden/preprocessor/define_nested.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Define_Nested_Redefine",
    "Input"  : "test/input/preprocessor/define_nested_redefine.c",
    "Output" : "test/output/preprocessor/define_nested_redefine/define_nested_redefine.pp",
    "Golden" : "test/golden/preprocessor/define_nested_redefine.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Define_Infinite_Recursive",
    "Input"  : "test/input/preprocessor/define_infinite_recursive.c",
    "Output" : "test/output/preprocessor/define_infinite_recursive/define_infinite_recursive.pp",
    "Golden" : "test/golden/preprocessor/define_infinite_recursive.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Define_Functional_Simple",
    "Input"  : "test/input/preprocessor/define_functional_simple.c",
    "Output" : "test/output/preprocessor/define_functional_simple/define_functional_simple.pp",
    "Golden" : "test/golden/preprocessor/define_functional_simple.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Define_Functional_Complex",
    "Input"  : "test/input/preprocessor/define_functional_complex.c",
    "Output" : "test/output/preprocessor/define_functional_complex/define_functional_complex.pp",
    "Golden" : "test/golden/preprocessor/define_functional_complex.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Define_Functional_Nested",
    "Input"  : "test/input/preprocessor/define_functional_nested.c",
    "Output" : "test/output/preprocessor/define_functional_nested/define_functional_nested.pp",
    "Golden" : "test/golden/preprocessor/define_functional_nested.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Define_Min_Max",
    "Input"  : "test/input/preprocessor/define_min_max.c",
    "Output" : "test/output/preprocessor/define_min_max/define_min_max.pp",
    "Golden" : "test/golden/preprocessor/define_min_max.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Define_Functional_Parens_Split",
    "Input"  : "test/input/preprocessor/define_functional_parens_split.c",
    "Output" : "test/output/preprocessor/define_functional_parens_split/define_functional_parens_split.pp",
    "Golden" : "test/golden/preprocessor/define_functional_parens_split.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Define_Functional_No_Parens",
    "Input"  : "test/input/preprocessor/define_functional_no_parens.c",
    "Output" : "test/output/preprocessor/define_functional_no_parens/define_functional_no_parens.pp",
    "Golden" : "test/golden/preprocessor/define_functional_no_parens.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Define_Object_Split_Space",
    "Input"  : "test/input/preprocessor/define_object_split_space.c",
    "Output" : "test/output/preprocessor/define_object_split_space/define_object_split_space.pp",
    "Golden" : "test/golden/preprocessor/define_object_split_space.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Define_Functional_Split_Space",
    "Input"  : "test/input/preprocessor/define_functional_split_space.c",
    "Output" : "test/output/preprocessor/define_functional_split_space/define_functional_split_space.pp",
    "Golden" : "test/golden/preprocessor/define_functional_split_space.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Define_Invalid_Identifier",
    "Input"  : "test/input/preprocessor/define_invalid_identifier.c",
    "Output" : "test/output/preprocessor/define_invalid_identifier/define_invalid_identifier.pp",
    "Golden" : "",
    "Type"   : "Preprocessor",
    "Error"  : "True"
    },
    {
    "Name"   : "Define_Functional_Duplicate_Param",
    "Input"  : "test/input/preprocessor/define_functional_duplicate_param.c",
    "Output" : "test/output/preprocessor/define_functional_duplicate_param/define_functional_duplicate_param.pp",
    "Golden" : "",
    "Type"   : "Preprocessor",
    "Error"  : "True"
    },
    {
    "Name"   : "Undefine_Simple_Identifier",
    "Input"  : "test/input/preprocessor/undefine_simple_identifier.c",
    "Output" : "test/output/preprocessor/undefine_simple_identifier/undefine_simple_identifier.pp",
    "Golden" : "test/golden/preprocessor/undefine_simple_identifier.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Undefine_Complex_Identifier",
    "Input"  : "test/input/preprocessor/undefine_complex_identifier.c",
    "Output" : "test/output/preprocessor/undefine_complex_identifier/undefine_complex_identifier.pp",
    "Golden" : "test/golden/preprocessor/undefine_complex_identifier.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Undefine_Functional",
    "Input"  : "test/input/preprocessor/undefine_functional.c",
    "Output" : "test/output/preprocessor/undefine_functional/undefine_functional.pp",
    "Golden" : "test/golden/preprocessor/undefine_functional.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Undefine_Not_Defined",
    "Input"  : "test/input/preprocessor/undefine_not_defined.c",
    "Output" : "test/output/preprocessor/undefine_not_defined/undefine_not_defined.pp",
    "Golden" : "test/golden/preprocessor/undefine_not_defined.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Undefine_Split_Space",
    "Input"  : "test/input/preprocessor/undefine_split_space.c",
    "Output" : "test/output/preprocessor/undefine_split_space/undefine_split_space.pp",
    "Golden" : "test/golden/preprocessor/undefine_split_space.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Undefine_Invalid_Identifier",
    "Input"  : "test/input/preprocessor/undefine_invalid_identifier.c",
    "Output" : "test/output/preprocessor/undefine_invalid_identifier/undefine_invalid_identifier.pp",
    "Golden" : "",
    "Type"   : "Preprocessor",
    "Error"  : "True"
    },
    {
    "Name"   : "Ifdef_True",
    "Input"  : "test/input/preprocessor/ifdef_true.c",
    "Output" : "test/output/preprocessor/ifdef_true/ifdef_true.pp",
    "Golden" : "test/golden/preprocessor/ifdef_true.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Ifdef_False",
    "Input"  : "test/input/preprocessor/ifdef_false.c",
    "Output" : "test/output/preprocessor/ifdef_false/ifdef_false.pp",
    "Golden" : "test/golden/preprocessor/ifdef_false.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Ifdef_Empty",
    "Input"  : "test/input/preprocessor/ifdef_empty.c",
    "Output" : "test/output/preprocessor/ifdef_empty/ifdef_empty.pp",
    "Golden" : "test/golden/preprocessor/ifdef_empty.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Ifdef_Nested_Simple",
    "Input"  : "test/input/preprocessor/ifdef_nested_simple.c",
    "Output" : "test/output/preprocessor/ifdef_nested_simple/ifdef_nested_simple.pp",
    "Golden" : "test/golden/preprocessor/ifdef_nested_simple.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Ifdef_Nested_Complex",
    "Input"  : "test/input/preprocessor/ifdef_nested_complex.c",
    "Output" : "test/output/preprocessor/ifdef_nested_complex/ifdef_nested_complex.pp",
    "Golden" : "test/golden/preprocessor/ifdef_nested_complex.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Ifdef_Split_Space",
    "Input"  : "test/input/preprocessor/ifdef_split_space.c",
    "Output" : "test/output/preprocessor/ifdef_split_space/ifdef_split_space.pp",
    "Golden" : "test/golden/preprocessor/ifdef_split_space.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Ifdef_Multiple_Files",
    "Input"  : "test/input/preprocessor/ifdef_multiple_files/ifdef_multiple_files.c",
    "Output" : "test/output/preprocessor/ifdef_multiple_files/ifdef_multiple_files.pp",
    "Golden" : "test/golden/preprocessor/ifdef_multiple_files.pp",
    "Type"   : "Preprocessor",
    "Error"  : "True"
    },
    {
    "Name"   : "Ifdef_Invalid_Identifier",
    "Input"  : "test/input/preprocessor/ifdef_invalid_identifier.c",
    "Output" : "test/output/preprocessor/ifdef_invalid_identifier/ifdef_invalid_identifier.pp",
    "Golden" : "test/golden/preprocessor/ifdef_invalid_identifier.pp",
    "Type"   : "Preprocessor",
    "Error"  : "True"
    },
    {
    "Name"   : "Ifdef_Unmatched",
    "Input"  : "test/input/preprocessor/ifdef_unmatched.c",
    "Output" : "test/output/preprocessor/ifdef_unmatched/ifdef_unmatched.pp",
    "Golden" : "test/golden/preprocessor/ifdef_unmatched.pp",
    "Type"   : "Preprocessor",
    "Error"  : "True"
    },
    {
    "Name"   : "Ifdef_Nested_Unmatched",
    "Input"  : "test/input/preprocessor/ifdef_nested_unmatched.c",
    "Output" : "test/output/preprocessor/ifdef_nested_unmatched/ifdef_nested_unmatched.pp",
    "Golden" : "test/golden/preprocessor/ifdef_nested_unmatched.pp",
    "Type"   : "Preprocessor",
    "Error"  : "True"
    },
    {
    "Name"   : "Ifdef_Invalid_Params",
    "Input"  : "test/input/preprocessor/ifdef_invalid_params.c",
    "Output" : "test/output/preprocessor/ifdef_invalid_params/ifdef_invalid_params.pp",
    "Golden" : "test/golden/preprocessor/ifdef_invalid_params.pp",
    "Type"   : "Preprocessor",
    "Error"  : "True"
    },
    {
    "Name"   : "Ifndef_True",
    "Input"  : "test/input/preprocessor/ifndef_true.c",
    "Output" : "test/output/preprocessor/ifndef_true/ifndef_true.pp",
    "Golden" : "test/golden/preprocessor/ifndef_true.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Ifndef_False",
    "Input"  : "test/input/preprocessor/ifndef_false.c",
    "Output" : "test/output/preprocessor/ifndef_false/ifndef_false.pp",
    "Golden" : "test/golden/preprocessor/ifndef_false.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Ifndef_Empty",
    "Input"  : "test/input/preprocessor/ifndef_empty.c",
    "Output" : "test/output/preprocessor/ifndef_empty/ifndef_empty.pp",
    "Golden" : "test/golden/preprocessor/ifndef_empty.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Ifndef_Nested_Simple",
    "Input"  : "test/input/preprocessor/ifndef_nested_simple.c",
    "Output" : "test/output/preprocessor/ifndef_nested_simple/ifndef_nested_simple.pp",
    "Golden" : "test/golden/preprocessor/ifndef_nested_simple.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Ifndef_Nested_Complex",
    "Input"  : "test/input/preprocessor/ifndef_nested_complex.c",
    "Output" : "test/output/preprocessor/ifndef_nested_complex/ifndef_nested_complex.pp",
    "Golden" : "test/golden/preprocessor/ifndef_nested_complex.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Ifndef_Split_Space",
    "Input"  : "test/input/preprocessor/ifndef_split_space.c",
    "Output" : "test/output/preprocessor/ifndef_split_space/ifndef_split_space.pp",
    "Golden" : "test/golden/preprocessor/ifndef_split_space.pp",
    "Type"   : "Preprocessor",
    "Error"  : "False"
    },
    {
    "Name"   : "Ifndef_Multiple_Files",
    "Input"  : "test/input/preprocessor/ifndef_multiple_files/ifndef_multiple_files.c",
    "Output" : "test/output/preprocessor/ifndef_multiple_files/ifndef_multiple_files.pp",
    "Golden" : "test/golden/preprocessor/ifndef_multiple_files.pp",
    "Type"   : "Preprocessor",
    "Error"  : "True"
    },
    {
    "Name"   : "Ifndef_Invalid_Identifier",
    "Input"  : "test/input/preprocessor/ifndef_invalid_identifier.c",
    "Output" : "test/output/preprocessor/ifndef_invalid_identifier/ifndef_invalid_identifier.pp",
    "Golden" : "test/golden/preprocessor/ifndef_invalid_identifier.pp",
    "Type"   : "Preprocessor",
    "Error"  : "True"
    },
    {
    "Name"   : "Ifndef_Unmatched",
    "Input"  : "test/input/preprocessor/ifndef_unmatched.c",
    "Output" : "test/output/preprocessor/ifndef_unmatched/ifndef_unmatched.pp",
    "Golden" : "test/golden/preprocessor/ifndef_unmatched.pp",
    "Type"   : "Preprocessor",
    "Error"  : "True"
    },
    {
    "Name"   : "Ifndef_Nested_Unmatched",
    "Input"  : "test/input/preprocessor/ifndef_nested_unmatched.c",
    "Output" : "test/output/preprocessor/ifndef_nested_unmatched/ifndef_nested_unmatched.pp",
    "Golden" : "test/golden/preprocessor/ifndef_nested_unmatched.pp",
    "Type"   : "Preprocessor",
    "Error"  : "True"
    },
    {
    "Name"   : "Ifndef_Invalid_Params",
    "Input"  : "test/input/preprocessor/ifndef_invalid_params.c",
    "Output" : "test/output/preprocessor/ifndef_invalid_params/ifndef_invalid_params.pp",
    "Golden" : "test/golden/preprocessor/ifndef_invalid_params.pp",
    "Type"   : "Preprocessor",
    "Error"  : "True"
    },
    {
    "Name"   : "Conditionals_No_Start",
    "Input"  : "test/input/preprocessor/conditionals_no_start.c",
    "Output" : "test/output/preprocessor/conditionals_no_start/conditionals_no_start.pp",
    "Golden" : "",
    "Type"   : "Preprocessor",
    "Error"  : "True"
    }
]
